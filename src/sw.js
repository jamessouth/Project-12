!function(e){var t={};function s(n){if(t[n])return t[n].exports;var a=t[n]={i:n,l:!1,exports:{}};return e[n].call(a.exports,a,a.exports,s),a.l=!0,a.exports}s.m=e,s.c=t,s.d=function(e,t,n){s.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},s.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},s.t=function(e,t){if(1&t&&(e=s(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(s.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var a in e)s.d(n,a,function(t){return e[t]}.bind(null,a));return n},s.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return s.d(t,"a",t),t},s.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},s.p="",s(s.s=0)}([function(e,t,s){"use strict";s.r(t);try{self["workbox:core:4.0.0"]&&_()}catch(e){}const n={googleAnalytics:"googleAnalytics",precache:"precache-v2",prefix:"workbox",runtime:"runtime",suffix:self.registration.scope},a=e=>[n.prefix,e,n.suffix].filter(e=>e.length>0).join("-"),r={updateDetails:e=>{Object.keys(n).forEach(t=>{void 0!==e[t]&&(n[t]=e[t])})},getGoogleAnalyticsName:e=>e||a(n.googleAnalytics),getPrecacheName:e=>e||a(n.precache),getRuntimeName:e=>e||a(n.runtime)},i=e=>{const t=new URL(e,location);return t.origin===location.origin?t.pathname:t.href},c=(e,...t)=>{let s=e;return t.length>0&&(s+=` :: ${JSON.stringify(t)}`),s};class o extends Error{constructor(e,t){super(c(e,t)),this.name=e,this.details=t}}const h="cacheDidUpdate",l="cacheWillUpdate",u="cachedResponseWillBeUsed",d="fetchDidFail",p="fetchDidSucceed",g="requestWillFetch",f=(e,t)=>e.filter(e=>t in e),m=new Set;const w=async({cacheName:e,request:t,event:s,matchOptions:n,plugins:a=[]})=>{const r=await caches.open(e);let i=await r.match(t,n);for(const r of a)u in r&&(i=await r[u].call(r,{cacheName:e,request:t,event:s,matchOptions:n,cachedResponse:i}));return i},y=async({request:e,response:t,event:s,plugins:n})=>{let a=t,r=!1;for(let t of n)if(l in t&&(r=!0,!(a=await t[l].call(t,{request:e,response:a,event:s}))))break;return r||(a=200===a.status?a:null),a||null},v={put:async({cacheName:e,request:t,response:s,event:n,plugins:a=[],matchOptions:r}={})=>{if(!s)throw new o("cache-put-with-no-response",{url:i(t.url)});let c=await y({request:t,response:s,event:n,plugins:a});if(!c)return;const l=await caches.open(e),u=f(a,h);let d=u.length>0?await w({cacheName:e,request:t,matchOptions:r}):null;try{await l.put(t,c)}catch(e){throw"QuotaExceededError"===e.name&&await async function(){for(const e of m)await e()}(),e}for(let s of u)await s[h].call(s,{cacheName:e,request:t,event:n,oldResponse:d,newResponse:c})},match:w},x={fetch:async({request:e,fetchOptions:t,event:s,plugins:n=[]})=>{if(s&&s.preloadResponse){const e=await s.preloadResponse;if(e)return e}"string"==typeof e&&(e=new Request(e));const a=f(n,d),r=a.length>0?e.clone():null;try{for(let t of n)g in t&&(e=await t[g].call(t,{request:e.clone(),event:s}))}catch(e){throw new o("plugin-error-request-will-fetch",{thrownError:e})}let i=e.clone();try{let c;c="navigate"===e.mode?await fetch(e):await fetch(e,t);for(const e of n)p in e&&(c=await e[p].call(e,{event:s,request:i,response:c}));return c}catch(e){for(const t of a)await t[d].call(t,{error:e,event:s,originalRequest:r.clone(),request:i.clone()});throw e}}};try{self["workbox:precaching:4.0.0"]&&_()}catch(e){}const R="__WB_REVISION__";function q(e){if(!e)throw new o("add-to-cache-list-unexpected-type",{entry:e});if("string"==typeof e){const t=new URL(e,location);return{cacheKey:t.href,url:t.href}}const{revision:t,url:s}=e;if(!s)throw new o("add-to-cache-list-unexpected-type",{entry:e});if(!t){const e=new URL(s,location);return{cacheKey:e.href,url:e.href}}const n=new URL(s,location),a=new URL(s,location);return a.searchParams.set(R,t),{cacheKey:a.href,url:n.href}}class N{constructor(e){this._cacheName=r.getPrecacheName(e),this._urlsToCacheKeys=new Map}addToCacheList(e){for(const t of e){const{cacheKey:e,url:s}=q(t);if(this._urlsToCacheKeys.has(s)&&this._urlsToCacheKeys.get(s)!==e)throw new o("add-to-cache-list-conflicting-entries",{firstEntry:this._urlsToCacheKeys.get(s),secondEntry:e});this._urlsToCacheKeys.set(s,e)}}async install({event:e,plugins:t}={}){const s=[],n=[],a=await caches.open(this._cacheName),r=await a.keys(),i=new Set(r.map(e=>e.url));for(const e of this._urlsToCacheKeys.values())i.has(e)?n.push(e):s.push(e);const c=s.map(s=>this._addURLToCache({event:e,plugins:t,url:s}));return await Promise.all(c),{updatedURLs:s,notUpdatedURLs:n}}async activate(){const e=await caches.open(this._cacheName),t=await e.keys(),s=new Set(this._urlsToCacheKeys.values()),n=[];for(const a of t)s.has(a.url)||(await e.delete(a),n.push(a.url));return{deletedURLs:n}}async _addURLToCache({url:e,event:t,plugins:s}){const n=new Request(e,{credentials:"same-origin"});let a,r=await x.fetch({event:t,plugins:s,request:n});for(const e of s||[])"cacheWillUpdate"in e&&(a=e.cacheWillUpdate);if(!(a?a({event:t,request:n,response:r}):r.status<400))throw new o("bad-precaching-response",{url:e,status:r.status});r.redirected&&(r=await async function(e){const t=e.clone(),s="body"in t?Promise.resolve(t.body):t.blob(),n=await s;return new Response(n,{headers:t.headers,status:t.status,statusText:t.statusText})}(r)),await v.put({event:t,plugins:s,request:n,response:r,cacheName:this._cacheName,matchOptions:{ignoreSearch:!0}})}getURLsToCacheKeys(){return this._urlsToCacheKeys}getCachedURLs(){return[...this._urlsToCacheKeys.keys()]}getCacheKeyForURL(e){const t=new URL(e,location);return this._urlsToCacheKeys.get(t.href)}}let b;const E=()=>(b||(b=new N),b);const U=(e,t)=>{const s=E().getURLsToCacheKeys();for(const n of function*(e,{ignoreURLParametersMatching:t,directoryIndex:s,cleanURLs:n,urlManipulation:a}={}){const r=new URL(e,location);r.hash="",yield r.href;const i=function(e,t){for(const s of[...e.searchParams.keys()])t.some(e=>e.test(s))&&e.searchParams.delete(s);return e}(r,t);if(yield i.href,s&&i.pathname.endsWith("/")){const e=new URL(i);e.pathname+=s,yield e.href}if(n){const e=new URL(i);e.pathname+=".html",yield e.href}if(a){const e=a({url:r});for(const t of e)yield t.href}}(e,t)){const e=s.get(n);if(e)return e}};let O=!1;const L=[],T={get:()=>L,add(e){L.push(...e)}};let k=!1;try{self["workbox:routing:4.0.0"]&&_()}catch(e){}const C="GET",M=e=>e&&"object"==typeof e?e:{handle:e};class S{constructor(e,t,s){this.handler=M(t),this.match=e,this.method=s||C}}class A extends S{constructor(e,t,s){super(({url:t})=>{const s=e.exec(t.href);return s?t.origin!==location.origin&&0!==s.index?null:s.slice(1):null},t,s)}}class K{constructor(){this._routes=new Map}get routes(){return this._routes}addFetchListener(){self.addEventListener("fetch",e=>{const{request:t}=e,s=this.handleRequest({request:t,event:e});s&&e.respondWith(s)})}addCacheListener(){self.addEventListener("message",async e=>{if(e.data&&"CACHE_URLS"===e.data.type){const{payload:t}=e.data;0;const s=Promise.all(t.urlsToCache.map(e=>{"string"==typeof e&&(e=[e]);const t=new Request(...e);return this.handleRequest({request:t})}));e.waitUntil(s),e.ports&&(await s,e.ports[0].postMessage(!0))}})}handleRequest({request:e,event:t}){const s=new URL(e.url,location);if(!s.protocol.startsWith("http"))return void 0;let n,{params:a,route:r}=this.findMatchingRoute({url:s,request:e,event:t}),i=r&&r.handler;if(!i&&this._defaultHandler&&(i=this._defaultHandler),i){try{n=i.handle({url:s,request:e,event:t,params:a})}catch(e){n=Promise.reject(e)}return n&&this._catchHandler&&(n=n.catch(e=>this._catchHandler.handle({url:s,event:t,err:e}))),n}}findMatchingRoute({url:e,request:t,event:s}){const n=this._routes.get(t.method)||[];for(const a of n){let n,r=a.match({url:e,request:t,event:s});if(r)return Array.isArray(r)&&r.length>0?n=r:r.constructor===Object&&Object.keys(r).length>0&&(n=r),{route:a,params:n}}return{}}setDefaultHandler(e){this._defaultHandler=M(e)}setCatchHandler(e){this._catchHandler=M(e)}registerRoute(e){this._routes.has(e.method)||this._routes.set(e.method,[]),this._routes.get(e.method).push(e)}unregisterRoute(e){if(!this._routes.has(e.method))throw new o("unregister-route-but-not-found-with-method",{method:e.method});const t=this._routes.get(e.method).indexOf(e);if(!(t>-1))throw new o("unregister-route-route-not-registered");this._routes.get(e.method).splice(t,1)}}let P;const j=()=>(P||((P=new K).addFetchListener(),P.addCacheListener()),P),D=(e,t,s="GET")=>{let n;if("string"==typeof e){const a=new URL(e,location);0,n=new S(({url:e})=>e.href===a.href,t,s)}else if(e instanceof RegExp)n=new A(e,t,s);else if("function"==typeof e)n=new S(e,t,s);else{if(!(e instanceof S))throw new o("unsupported-route-type",{moduleName:"workbox-routing",funcName:"registerRoute",paramName:"capture"});n=e}return j().registerRoute(n),n};try{self["workbox:strategies:4.0.0"]&&_()}catch(e){}class W{constructor(e={}){this._cacheName=r.getRuntimeName(e.cacheName),this._plugins=e.plugins||[],this._fetchOptions=e.fetchOptions||null,this._matchOptions=e.matchOptions||null}async handle({event:e,request:t}){return this.makeRequest({event:e,request:t||e.request})}async makeRequest({event:e,request:t}){"string"==typeof t&&(t=new Request(t));let s,n=await v.match({cacheName:this._cacheName,request:t,event:e,matchOptions:this._matchOptions,plugins:this._plugins});if(n)0;else{0;try{n=await this._getFromNetwork(t,e)}catch(e){s=e}0}if(!n)throw new o("no-response",{url:t.url,error:s});return n}async _getFromNetwork(e,t){const s=await x.fetch({request:e,event:t,fetchOptions:this._fetchOptions,plugins:this._plugins}),n=s.clone(),a=v.put({cacheName:this._cacheName,request:e,response:n,event:t,plugins:this._plugins});if(t)try{t.waitUntil(a)}catch(e){0}return s}}const H={cacheWillUpdate:({response:e})=>200===e.status||0===e.status?e:null};class I{constructor(e={}){if(this._cacheName=r.getRuntimeName(e.cacheName),this._plugins=e.plugins||[],e.plugins){let t=e.plugins.some(e=>!!e.cacheWillUpdate);this._plugins=t?e.plugins:[H,...e.plugins]}else this._plugins=[H];this._fetchOptions=e.fetchOptions||null,this._matchOptions=e.matchOptions||null}async handle({event:e,request:t}){return this.makeRequest({event:e,request:t||e.request})}async makeRequest({event:e,request:t}){"string"==typeof t&&(t=new Request(t));const s=this._getFromNetwork({request:t,event:e});let n,a=await v.match({cacheName:this._cacheName,request:t,event:e,matchOptions:this._matchOptions,plugins:this._plugins});if(a){if(e)try{e.waitUntil(s)}catch(n){0}}else{0;try{a=await s}catch(e){n=e}}if(!a)throw new o("no-response",{url:t.url,error:n});return a}async _getFromNetwork({request:e,event:t}){const s=await x.fetch({request:e,event:t,fetchOptions:this._fetchOptions,plugins:this._plugins}),n=v.put({cacheName:this._cacheName,request:e,response:s.clone(),event:t,plugins:this._plugins});if(t)try{t.waitUntil(n)}catch(e){0}return s}}class F{constructor(e,t,{onupgradeneeded:s,onversionchange:n=this._onversionchange}={}){this._name=e,this._version=t,this._onupgradeneeded=s,this._onversionchange=n,this._db=null}get db(){return this._db}async open(){if(!this._db)return this._db=await new Promise((e,t)=>{let s=!1;setTimeout(()=>{s=!0,t(new Error("The open request was blocked and timed out"))},this.OPEN_TIMEOUT);const n=indexedDB.open(this._name,this._version);n.onerror=(()=>t(n.error)),n.onupgradeneeded=(e=>{s?(n.transaction.abort(),e.target.result.close()):this._onupgradeneeded&&this._onupgradeneeded(e)}),n.onsuccess=(({target:t})=>{const n=t.result;s?n.close():(n.onversionchange=this._onversionchange,e(n))})}),this}async getKey(e,t){return(await this.getAllKeys(e,t,1))[0]}async getAll(e,t,s){return await this.getAllMatching(e,{query:t,count:s})}async getAllKeys(e,t,s){return(await this.getAllMatching(e,{query:t,count:s,includeKeys:!0})).map(({key:e})=>e)}async getAllMatching(e,{index:t,query:s=null,direction:n="next",count:a,includeKeys:r}={}){return await this.transaction([e],"readonly",(i,c)=>{const o=i.objectStore(e),h=t?o.index(t):o,l=[];h.openCursor(s,n).onsuccess=(({target:e})=>{const t=e.result;if(t){const{primaryKey:e,key:s,value:n}=t;l.push(r?{primaryKey:e,key:s,value:n}:n),a&&l.length>=a?c(l):t.continue()}else c(l)})})}async transaction(e,t,s){return await this.open(),await new Promise((n,a)=>{const r=this._db.transaction(e,t);r.onabort=(({target:e})=>a(e.error)),r.oncomplete=(()=>n()),s(r,e=>n(e))})}async _call(e,t,s,...n){return await this.transaction([t],s,(s,a)=>{s.objectStore(t)[e](...n).onsuccess=(({target:e})=>{a(e.result)})})}_onversionchange(){this.close()}close(){this._db&&this._db.close()}}F.prototype.OPEN_TIMEOUT=2e3;const $={readonly:["get","count","getKey","getAll","getAllKeys"],readwrite:["add","put","clear","delete"]};for(const[e,t]of Object.entries($))for(const s of t)s in IDBObjectStore.prototype&&(F.prototype[s]=async function(t,...n){return await this._call(s,t,e,...n)});const Q=async e=>{await new Promise((t,s)=>{const n=indexedDB.deleteDatabase(e);n.onerror=(({target:e})=>{s(e.error)}),n.onblocked=(()=>{s(new Error("Delete blocked"))}),n.onsuccess=(()=>{t()})})};try{self["workbox:expiration:4.0.0"]&&_()}catch(e){}const B="workbox-expiration",G="cache-entries",z=e=>{const t=new URL(e,location);return t.hash="",t.href};class J{constructor(e){this._cacheName=e,this._db=new F(B,1,{onupgradeneeded:e=>this._handleUpgrade(e)})}_handleUpgrade(e){const t=e.target.result.createObjectStore(G,{keyPath:"id"});t.createIndex("cacheName","cacheName",{unique:!1}),t.createIndex("timestamp","timestamp",{unique:!1}),Q(this._cacheName)}async setTimestamp(e,t){e=z(e),await this._db.put(G,{url:e,timestamp:t,cacheName:this._cacheName,id:this._getId(e)})}async getTimestamp(e){return(await this._db.get(G,this._getId(e))).timestamp}async expireEntries(e,t){return await this._db.transaction(G,"readwrite",(s,n)=>{const a=s.objectStore(G),r=[];let i=0;a.index("timestamp").openCursor(null,"prev").onsuccess=(({target:s})=>{const a=s.result;if(a){const s=a.value;s.cacheName===this._cacheName&&(e&&s.timestamp<e||t&&i>=t?(a.delete(),r.push(a.value.url)):i++),a.continue()}else n(r)})})}_getId(e){return this._cacheName+"|"+z(e)}}class V{constructor(e,t={}){this._isRunning=!1,this._rerunRequested=!1,this._maxEntries=t.maxEntries,this._maxAgeSeconds=t.maxAgeSeconds,this._cacheName=e,this._timestampModel=new J(e)}async expireEntries(){if(this._isRunning)return void(this._rerunRequested=!0);this._isRunning=!0;const e=this._maxAgeSeconds?Date.now()-1e3*this._maxAgeSeconds:void 0,t=await this._timestampModel.expireEntries(e,this._maxEntries),s=await caches.open(this._cacheName);for(const e of t)await s.delete(e);this._isRunning=!1,this._rerunRequested&&(this._rerunRequested=!1,this.expireEntries())}async updateTimestamp(e){await this._timestampModel.setTimestamp(e,Date.now())}async isURLExpired(e){return await this._timestampModel.getTimestamp(e)<Date.now()-1e3*this._maxAgeSeconds}async delete(){this._rerunRequested=!1,await this._timestampModel.expireEntries(1/0)}}class X{constructor(e={}){var t;this._config=e,this._maxAgeSeconds=e.maxAgeSeconds,this._cacheExpirations=new Map,e.purgeOnQuotaError&&(t=(()=>this.deleteCacheAndMetadata()),m.add(t))}_getCacheExpiration(e){if(e===r.getRuntimeName())throw new o("expire-custom-caches-only");let t=this._cacheExpirations.get(e);return t||(t=new V(e,this._config),this._cacheExpirations.set(e,t)),t}cachedResponseWillBeUsed({event:e,request:t,cacheName:s,cachedResponse:n}){if(!n)return null;let a=this._isResponseDateFresh(n);const r=this._getCacheExpiration(s);r.expireEntries();const i=r.updateTimestamp(t.url);if(e)try{e.waitUntil(i)}catch(e){0}return a?n:null}_isResponseDateFresh(e){if(!this._maxAgeSeconds)return!0;const t=this._getDateHeaderTimestamp(e);return null===t||t>=Date.now()-1e3*this._maxAgeSeconds}_getDateHeaderTimestamp(e){if(!e.headers.has("date"))return null;const t=e.headers.get("date"),s=new Date(t).getTime();return isNaN(s)?null:s}async cacheDidUpdate({cacheName:e,request:t}){const s=this._getCacheExpiration(e);await s.updateTimestamp(t.url),await s.expireEntries()}async deleteCacheAndMetadata(){for(const[e,t]of this._cacheExpirations)await caches.delete(e),await t.delete();this._cacheExpirations=new Map}}const Y="james south portfolio";var Z,ee,te,se;Z={prefix:Y},r.updateDetails(Z),self.__precacheManifest=[].concat(self.__precacheManifest||[]),ee=self.__precacheManifest,te={},(e=>{const t=E();if(t.addToCacheList(e),!k&&e.length>0){const e=T.get();self.addEventListener("install",s=>{s.waitUntil(t.install({event:s,plugins:e}).catch(e=>{throw e}))}),self.addEventListener("activate",s=>{s.waitUntil(t.activate({event:s,plugins:e}))}),k=!0}})(ee),(({ignoreURLParametersMatching:e=[/^utm_/],directoryIndex:t="index.html",cleanURLs:s=!0,urlManipulation:n=null}={})=>{if(!O){const a=r.getPrecacheName();addEventListener("fetch",r=>{const i=U(r.request.url,{cleanURLs:s,directoryIndex:t,ignoreURLParametersMatching:e,urlManipulation:n});if(!i)return;let c=caches.open(a).then(e=>e.match(i)).then(e=>e||fetch(i));r.respondWith(c)}),O=!0}})(te),addEventListener("activate",e=>{const t=r.getPrecacheName();e.waitUntil((async(e,t="-precache-")=>{const s=(await caches.keys()).filter(s=>s.includes(t)&&s.includes(self.registration.scope)&&s!==e);return await Promise.all(s.map(e=>caches.delete(e))),s})(t).then(e=>{}))}),self.addEventListener("message",e=>{e.data&&"skipWaiting"===e.data&&self.skipWaiting()}),D(/\.(?:js)$/,new W({cacheName:`${Y}-lazy-js`,plugins:[new X({maxAgeSeconds:31536e3,purgeOnQuotaError:!0})]})),D(/\.(?:png|jpg|jpeg|svg|gif)$/,new W({cacheName:`${Y}-images`,plugins:[new X({maxAgeSeconds:15552e3,purgeOnQuotaError:!0})]})),D(/^https:\/\/fonts\.googleapis\.com/,new I({cacheName:`${Y}-google-fonts-css`,plugins:[new X({maxEntries:1,maxAgeSeconds:2592e3,purgeOnQuotaError:!0})]})),D(/^https:\/\/fonts\.gstatic\.com/,new W({cacheName:`${Y}-google-fonts`,plugins:[new X({maxEntries:1,maxAgeSeconds:31536e3,purgeOnQuotaError:!0})]})),se=new I({cacheName:`${Y}-default-handler`,plugins:[new X({maxAgeSeconds:31536e3,purgeOnQuotaError:!0})]}),j().setDefaultHandler(se),(e=>{j().setCatchHandler(e)})(({event:e})=>(console.log(e),Response.error()))}]);
//# sourceMappingURL=sw.js.map